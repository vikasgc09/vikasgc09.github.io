{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\quiz-app\\\\starter\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport questions from \"./components/questions\";\nexport default function App() {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n\n  const nextQuestion = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const next = currentQuestion + 1;\n\n    if (next < questions.length) {\n      //   console.log(questions.length);\n      setCurrentQuestion(next);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  console.log(score);\n\n  const resetGame = () => {\n    setShowScore(false);\n    setScore(0);\n    setCurrentQuestion(0);\n  }; //   const prevQuestion = () => {\n  //     const prev = currentQuestion - 1;\n  //     if (prev >= 0) {\n  //       setCurrentQuestion(prev);\n  //     }\n  //   };\n\n\n  const [showScore, setShowScore] = useState(false);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, showScore ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"score-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"You scored \", score, \" out of \", questions.length, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => resetGame(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Start Again\"))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, \"Question \", currentQuestion + 1), \"/\", questions.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, questions[currentQuestion].questionText)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, questions[currentQuestion].answerOptions.map((questionOption, index) => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      key: index,\n      onClick: () => nextQuestion(questionOption.isCorrect),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    }, questionOption.answerText);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => nextQuestion(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"next\"))));\n}","map":{"version":3,"sources":["D:/react/quiz-app/starter/src/App.js"],"names":["React","useState","questions","App","currentQuestion","setCurrentQuestion","score","setScore","nextQuestion","isCorrect","next","length","setShowScore","console","log","resetGame","showScore","questionText","answerOptions","map","questionOption","index","answerText"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCJ,QAAQ,CAAC,CAAD,CAAtD;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMO,YAAY,GAAIC,SAAD,IAAe;AAClC,QAAIA,SAAJ,EAAe;AACbF,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AACD,UAAMI,IAAI,GAAGN,eAAe,GAAG,CAA/B;;AAEA,QAAIM,IAAI,GAAGR,SAAS,CAACS,MAArB,EAA6B;AAC3B;AACAN,MAAAA,kBAAkB,CAACK,IAAD,CAAlB;AACD,KAHD,MAGO;AACLE,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,GAZD;;AAaAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;;AACA,QAAMS,SAAS,GAAG,MAAM;AACtBH,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAL,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACAF,IAAAA,kBAAkB,CAAC,CAAD,CAAlB;AACD,GAJD,CAlB4B,CAwB5B;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAM,CAACW,SAAD,EAAYJ,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGe,SAAS,gBACR;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACcV,KADd,cAC6BJ,SAAS,CAACS,MADvC,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAE,MAAMI,SAAS,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CAFF,CADQ,gBAQR,uDACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgBX,eAAe,GAAG,CAAlC,CADF,OAC+CF,SAAS,CAACS,MADzD,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,SAAS,CAACE,eAAD,CAAT,CAA2Ba,YAD9B,CAJF,CADF,eASE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,SAAS,CAACE,eAAD,CAAT,CAA2Bc,aAA3B,CAAyCC,GAAzC,CACC,CAACC,cAAD,EAAiBC,KAAjB,KAA2B;AACzB,wBACE;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,OAAO,EAAE,MAAMb,YAAY,CAACY,cAAc,CAACX,SAAhB,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGW,cAAc,CAACE,UAJlB,CADF;AAQD,GAVF,CADH,CATF,eAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAE,MAAMd,YAAY,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAvBF,CAXJ,CADF;AA2CD","sourcesContent":["import React, { useState } from \"react\";\r\nimport questions from \"./components/questions\";\r\n\r\nexport default function App() {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n\r\n  const nextQuestion = (isCorrect) => {\r\n    if (isCorrect) {\r\n      setScore(score + 1);\r\n    }\r\n    const next = currentQuestion + 1;\r\n\r\n    if (next < questions.length) {\r\n      //   console.log(questions.length);\r\n      setCurrentQuestion(next);\r\n    } else {\r\n      setShowScore(true);\r\n    }\r\n  };\r\n  console.log(score);\r\n  const resetGame = () => {\r\n    setShowScore(false);\r\n    setScore(0);\r\n    setCurrentQuestion(0);\r\n  };\r\n\r\n  //   const prevQuestion = () => {\r\n  //     const prev = currentQuestion - 1;\r\n  //     if (prev >= 0) {\r\n  //       setCurrentQuestion(prev);\r\n  //     }\r\n  //   };\r\n\r\n  const [showScore, setShowScore] = useState(false);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {/* HINT: replace \"false\" with logic to display the \r\n      score when the user has answered all the questions */}\r\n      {showScore ? (\r\n        <div className=\"score-section\">\r\n          You scored {score} out of {questions.length}\r\n          <div>\r\n            <button onClick={() => resetGame()}>Start Again</button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"question-section\">\r\n            <div className=\"question-count\">\r\n              <span>Question {currentQuestion + 1}</span>/{questions.length}\r\n            </div>\r\n            <div className=\"question-text\">\r\n              {questions[currentQuestion].questionText}\r\n            </div>\r\n          </div>\r\n          <div className=\"answer-section\">\r\n            {questions[currentQuestion].answerOptions.map(\r\n              (questionOption, index) => {\r\n                return (\r\n                  <button\r\n                    key={index}\r\n                    onClick={() => nextQuestion(questionOption.isCorrect)}\r\n                  >\r\n                    {questionOption.answerText}\r\n                  </button>\r\n                );\r\n              }\r\n            )}\r\n          </div>\r\n          <div>\r\n            <button onClick={() => nextQuestion()}>next</button>\r\n            {/* <button onClick={() => prevQuestion()}>Previous</button> */}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}