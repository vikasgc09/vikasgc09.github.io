{"ast":null,"code":"import _slicedToArray from\"D:\\\\react\\\\quiz-app\\\\starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import questions from\"./components/questions\";export default function App(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),currentQuestion=_useState2[0],setCurrentQuestion=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),score=_useState4[0],setScore=_useState4[1];var nextQuestion=function nextQuestion(isCorrect){if(isCorrect){setScore(score+1);}var next=currentQuestion+1;if(next<questions.length){//   console.log(questions.length);\nsetCurrentQuestion(next);}else{setShowScore(true);}};console.log(score);var resetGame=function resetGame(){setShowScore(false);setScore(0);setCurrentQuestion(0);};//   const prevQuestion = () => {\n//     const prev = currentQuestion - 1;\n//     if (prev >= 0) {\n//       setCurrentQuestion(prev);\n//     }\n//   };\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showScore=_useState6[0],setShowScore=_useState6[1];return/*#__PURE__*/React.createElement(\"div\",{className:\"app\"},showScore?/*#__PURE__*/React.createElement(\"div\",{className:\"score-section\"},\"You scored \",score,\" out of \",questions.length,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return resetGame();}},\"Start Again\"))):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"question-section\"},/*#__PURE__*/React.createElement(\"div\",{className:\"question-count\"},/*#__PURE__*/React.createElement(\"span\",null,\"Question \",currentQuestion+1),\"/\",questions.length),/*#__PURE__*/React.createElement(\"div\",{className:\"question-text\"},questions[currentQuestion].questionText)),/*#__PURE__*/React.createElement(\"div\",{className:\"answer-section\"},questions[currentQuestion].answerOptions.map(function(questionOption,index){return/*#__PURE__*/React.createElement(\"button\",{key:index,onClick:function onClick(){return nextQuestion(questionOption.isCorrect);}},questionOption.answerText);})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return nextQuestion();}},\"next\"))));}","map":{"version":3,"sources":["D:/react/quiz-app/starter/src/App.js"],"names":["React","useState","questions","App","currentQuestion","setCurrentQuestion","score","setScore","nextQuestion","isCorrect","next","length","setShowScore","console","log","resetGame","showScore","questionText","answerOptions","map","questionOption","index","answerText"],"mappings":"wJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CAEA,cAAe,SAASC,CAAAA,GAAT,EAAe,eACkBF,QAAQ,CAAC,CAAD,CAD1B,wCACrBG,eADqB,eACJC,kBADI,8BAEFJ,QAAQ,CAAC,CAAD,CAFN,yCAErBK,KAFqB,eAEdC,QAFc,eAI5B,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,SAAD,CAAe,CAClC,GAAIA,SAAJ,CAAe,CACbF,QAAQ,CAACD,KAAK,CAAG,CAAT,CAAR,CACD,CACD,GAAMI,CAAAA,IAAI,CAAGN,eAAe,CAAG,CAA/B,CAEA,GAAIM,IAAI,CAAGR,SAAS,CAACS,MAArB,CAA6B,CAC3B;AACAN,kBAAkB,CAACK,IAAD,CAAlB,CACD,CAHD,IAGO,CACLE,YAAY,CAAC,IAAD,CAAZ,CACD,CACF,CAZD,CAaAC,OAAO,CAACC,GAAR,CAAYR,KAAZ,EACA,GAAMS,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtBH,YAAY,CAAC,KAAD,CAAZ,CACAL,QAAQ,CAAC,CAAD,CAAR,CACAF,kBAAkB,CAAC,CAAD,CAAlB,CACD,CAJD,CAMA;AACA;AACA;AACA;AACA;AACA;AA7B4B,eA+BMJ,QAAQ,CAAC,KAAD,CA/Bd,yCA+BrBe,SA/BqB,eA+BVJ,YA/BU,eAiC5B,mBACE,2BAAK,SAAS,CAAC,KAAf,EAGGI,SAAS,cACR,2BAAK,SAAS,CAAC,eAAf,gBACcV,KADd,YAC6BJ,SAAS,CAACS,MADvC,cAEE,4CACE,8BAAQ,OAAO,CAAE,yBAAMI,CAAAA,SAAS,EAAf,EAAjB,gBADF,CAFF,CADQ,cAQR,qDACE,2BAAK,SAAS,CAAC,kBAAf,eACE,2BAAK,SAAS,CAAC,gBAAf,eACE,4CAAgBX,eAAe,CAAG,CAAlC,CADF,KAC+CF,SAAS,CAACS,MADzD,CADF,cAIE,2BAAK,SAAS,CAAC,eAAf,EACGT,SAAS,CAACE,eAAD,CAAT,CAA2Ba,YAD9B,CAJF,CADF,cASE,2BAAK,SAAS,CAAC,gBAAf,EACGf,SAAS,CAACE,eAAD,CAAT,CAA2Bc,aAA3B,CAAyCC,GAAzC,CACC,SAACC,cAAD,CAAiBC,KAAjB,CAA2B,CACzB,mBACE,8BACE,GAAG,CAAEA,KADP,CAEE,OAAO,CAAE,yBAAMb,CAAAA,YAAY,CAACY,cAAc,CAACX,SAAhB,CAAlB,EAFX,EAIGW,cAAc,CAACE,UAJlB,CADF,CAQD,CAVF,CADH,CATF,cAuBE,4CACE,8BAAQ,OAAO,CAAE,yBAAMd,CAAAA,YAAY,EAAlB,EAAjB,SADF,CAvBF,CAXJ,CADF,CA2CD","sourcesContent":["import React, { useState } from \"react\";\r\nimport questions from \"./components/questions\";\r\n\r\nexport default function App() {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n\r\n  const nextQuestion = (isCorrect) => {\r\n    if (isCorrect) {\r\n      setScore(score + 1);\r\n    }\r\n    const next = currentQuestion + 1;\r\n\r\n    if (next < questions.length) {\r\n      //   console.log(questions.length);\r\n      setCurrentQuestion(next);\r\n    } else {\r\n      setShowScore(true);\r\n    }\r\n  };\r\n  console.log(score);\r\n  const resetGame = () => {\r\n    setShowScore(false);\r\n    setScore(0);\r\n    setCurrentQuestion(0);\r\n  };\r\n\r\n  //   const prevQuestion = () => {\r\n  //     const prev = currentQuestion - 1;\r\n  //     if (prev >= 0) {\r\n  //       setCurrentQuestion(prev);\r\n  //     }\r\n  //   };\r\n\r\n  const [showScore, setShowScore] = useState(false);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {/* HINT: replace \"false\" with logic to display the \r\n      score when the user has answered all the questions */}\r\n      {showScore ? (\r\n        <div className=\"score-section\">\r\n          You scored {score} out of {questions.length}\r\n          <div>\r\n            <button onClick={() => resetGame()}>Start Again</button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"question-section\">\r\n            <div className=\"question-count\">\r\n              <span>Question {currentQuestion + 1}</span>/{questions.length}\r\n            </div>\r\n            <div className=\"question-text\">\r\n              {questions[currentQuestion].questionText}\r\n            </div>\r\n          </div>\r\n          <div className=\"answer-section\">\r\n            {questions[currentQuestion].answerOptions.map(\r\n              (questionOption, index) => {\r\n                return (\r\n                  <button\r\n                    key={index}\r\n                    onClick={() => nextQuestion(questionOption.isCorrect)}\r\n                  >\r\n                    {questionOption.answerText}\r\n                  </button>\r\n                );\r\n              }\r\n            )}\r\n          </div>\r\n          <div>\r\n            <button onClick={() => nextQuestion()}>next</button>\r\n            {/* <button onClick={() => prevQuestion()}>Previous</button> */}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}